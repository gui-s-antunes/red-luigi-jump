{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://aulas/./src/animation.ts","webpack://aulas/./src/game.ts","webpack://aulas/./src/mario.ts","webpack://aulas/./src/menu.ts","webpack://aulas/./src/pipe.ts","webpack://aulas/./src/timer.ts","webpack://aulas/webpack/bootstrap","webpack://aulas/./src/main.ts"],"sourcesContent":["import { AnimationProtocol } from './interfaces/animation-protocol';\n\nexport class Animation implements AnimationProtocol {\n  removeAnimationProperty(sprite: HTMLImageElement): void {\n    sprite.classList.remove('animation');\n  }\n\n  addAnimationProperty(sprite: HTMLImageElement): void {\n    sprite.classList.add('animation');\n  }\n\n  runAnimation(sprite: HTMLImageElement): void {\n    sprite.style.animationPlayState = 'running';\n  }\n\n  pauseAnimation(sprite: HTMLImageElement): void {\n    sprite.style.animationPlayState = 'paused';\n  }\n}\n","import { GameProtocol } from './interfaces/game-protocol';\nimport { MarioProtocol } from './interfaces/mario-protocol';\nimport { MenuProtocol } from './interfaces/menu-protocol';\nimport { PipeProtocol } from './interfaces/pipe-protocol';\nimport { TimerProtocol } from './interfaces/timer-protocol';\n\nexport class Game implements GameProtocol {\n  private _topScore: number;\n  private _points = 0;\n  private _gameTimestamp = 0;\n  private _menu: MenuProtocol | null = null;\n\n  constructor(\n    private readonly mario: MarioProtocol,\n    private readonly pipe: PipeProtocol,\n    private _scoreGame: HTMLParagraphElement,\n    private readonly gameTimer: TimerProtocol,\n  ) {\n    this._topScore = this.getTopScoreFromBrowser();\n  }\n\n  get points(): number {\n    return this._points;\n  }\n\n  set points(points: number) {\n    this._points = points - this._gameTimestamp;\n  }\n\n  get topScore(): number {\n    return this._topScore;\n  }\n\n  set topScore(topScore: number) {\n    this.topScore = topScore;\n  }\n\n  set menu(menu: MenuProtocol) {\n    this._menu = menu;\n  }\n\n  getMenu(): MenuProtocol | undefined {\n    if (this._menu !== null) return this._menu;\n  }\n\n  startTimestamp(): void {\n    this._gameTimestamp = +new Date();\n  }\n\n  hiddenGameScore(): void {\n    this._scoreGame.style.display = 'none';\n  }\n\n  showGameScore(): void {\n    this._scoreGame.style.display = 'block';\n  }\n\n  updateGameScore(): void {\n    this.points = +new Date();\n    this._scoreGame.textContent = `Score: ${this.points}`;\n  }\n\n  getTopScoreFromBrowser(): number {\n    return localStorage['mario_top_score'] ?? 0;\n  }\n\n  updateTopScore(): void {\n    localStorage['mario_top_score'] = this.topScore;\n  }\n\n  compareNewScoreWithTopScore(): void {\n    if (!this.isNewScoreBetter()) return;\n    this._topScore = this.points;\n    this.updateTopScore();\n  }\n\n  isNewScoreBetter(): boolean {\n    return this.points > this.topScore;\n  }\n\n  startGame(): void {\n    this.showGameScore();\n    this.pipe.addPropertyAnimation();\n    this.pipe.runPipeAnimation();\n    this.startTimestamp();\n    this.gameTimer.setTimer(this, 'verifyMarioDanger', 15);\n  }\n\n  stopGame(): void {\n    this.stopIntervals();\n    this.stopSpritesAnimation();\n\n    this.mario.changeMarioSpriteImage('./assets/images/game-over.png');\n\n    this.compareNewScoreWithTopScore();\n\n    this._menu?.gameFinished();\n  }\n\n  stopIntervals(): void {\n    this.gameTimer.clearTimer();\n    this.mario.stopMarioInterval();\n  }\n\n  stopSpritesAnimation(): void {\n    this.mario.pauseMarioAnimation();\n    this.pipe.pausePipeAnimation();\n  }\n\n  verifyMarioDanger(): void {\n    this.updateGameScore();\n\n    const marioPosition = this.mario.getMarioPosition();\n    const pipePosition = this.pipe.getPipePosition();\n\n    if (!this.isMarioOnDanger(marioPosition, pipePosition)) return;\n\n    if (!this.isPipeUnderMario(marioPosition, pipePosition)) return;\n\n    this.stopGame();\n  }\n\n  isMarioOnDanger(marioPosition: DOMRect, pipePosition: DOMRect): boolean {\n    return marioPosition.bottom >= pipePosition.top;\n  }\n\n  isPipeUnderMario(marioPosition: DOMRect, pipePosition: DOMRect): boolean {\n    return (\n      pipePosition.left <= marioPosition.right &&\n      pipePosition.right >= (marioPosition.right + marioPosition.left) / 2\n    );\n  }\n}\n","import { AnimationProtocol } from './interfaces/animation-protocol';\nimport { MarioProtocol } from './interfaces/mario-protocol';\nimport { TimerProtocol } from './interfaces/timer-protocol';\n\nexport class Mario implements MarioProtocol {\n  constructor(\n    private readonly _marioSprite: HTMLImageElement,\n    private readonly animation: AnimationProtocol,\n    private readonly marioJumpTimer: TimerProtocol,\n  ) {\n    document.addEventListener('keydown', this.jumpController.bind(this));\n  }\n\n  get marioSprite(): HTMLImageElement {\n    return this._marioSprite;\n  }\n\n  jumpController(event: KeyboardEvent): void {\n    if (event.key !== ' ' && event.key !== 'ArrowUp') return;\n    if (this.marioContainsJump()) return;\n\n    this.addMarioJump();\n  }\n\n  addMarioJump(): void {\n    // this._marioSprite.classList.add('jump');\n    this.marioJumpTimer.setTimer(this, 'removeMarioJump', 900);\n    this.animation.addAnimationProperty(this.marioSprite); // agora é animation todas as animações\n  }\n\n  removeMarioJump(): void {\n    // this._marioSprite.classList.remove('jump');\n    this.animation.removeAnimationProperty(this.marioSprite);\n  }\n\n  runMarioAnimation(): void {\n    this.animation.runAnimation(this.marioSprite);\n  }\n\n  pauseMarioAnimation(): void {\n    this.animation.pauseAnimation(this.marioSprite);\n  }\n\n  changeMarioSpriteImage(imageSrc: string): void {\n    this._marioSprite.src = imageSrc;\n  }\n\n  marioContainsJump(): boolean {\n    return this.marioSprite.classList.contains('jump');\n  }\n\n  resetMario(): void {\n    this.removeMarioJump();\n    this.changeMarioSpriteImage('./assets/images/mario_gif_cortado.gif');\n    this.runMarioAnimation();\n  }\n\n  getMarioPosition(): DOMRect {\n    return this.marioSprite.getBoundingClientRect();\n  }\n\n  stopMarioInterval(): void {\n    this.marioJumpTimer.clearTimer();\n  }\n}\n","import { GameProtocol } from './interfaces/game-protocol';\nimport { MarioProtocol } from './interfaces/mario-protocol';\nimport { PipeProtocol } from './interfaces/pipe-protocol';\nimport { TimerProtocol } from './interfaces/timer-protocol';\n\nexport class Menu {\n  private _playButtonDiv: HTMLDivElement;\n\n  constructor(\n    private _playButton: HTMLButtonElement,\n    private _scoreP: HTMLParagraphElement,\n    private _topScoreP: HTMLParagraphElement,\n    private readonly game: GameProtocol,\n    private readonly mario: MarioProtocol,\n    private readonly pipe: PipeProtocol,\n    private readonly startTimer: TimerProtocol,\n  ) {\n    this._playButtonDiv = this._playButton.parentElement as HTMLDivElement;\n    this._playButton.addEventListener(\n      'click',\n      this.playButtonPressed.bind(this),\n    );\n  }\n\n  hiddenMenu(): void {\n    this._playButtonDiv.style.display = 'none';\n  }\n\n  showMenu(): void {\n    this._playButtonDiv.style.display = 'flex';\n  }\n\n  showMenuScore(): void {\n    this._scoreP.style.display = 'block';\n  }\n\n  playButtonPressed(): void {\n    this.pipe.resetPipe();\n    this.mario.resetMario();\n    this.hiddenMenu();\n    // this.game.startGame();\n    this.startTimer.setTimer(this.game, 'startGame', 10);\n  }\n\n  gameFinished(): void {\n    this.showMenu();\n    this.setScore();\n    this.setTopScore();\n    this.showMenuScore();\n  }\n\n  setTopScore(): void {\n    this._topScoreP.textContent = `Top Score: ${this.game.topScore}`;\n  }\n\n  setScore(): void {\n    this._scoreP.textContent = `Score: ${this.game.points}`;\n  }\n}\n","import { AnimationProtocol } from './interfaces/animation-protocol';\nimport { PipeProtocol } from './interfaces/pipe-protocol';\n\nexport class Pipe implements PipeProtocol {\n  constructor(\n    private readonly _pipeSprite: HTMLImageElement,\n    private readonly animation: AnimationProtocol,\n  ) {}\n  stopPipeAnimation(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  get pipeSprite(): HTMLImageElement {\n    return this._pipeSprite;\n  }\n\n  resetPipe(): void {\n    this.animation.removeAnimationProperty(this.pipeSprite);\n  }\n\n  addPropertyAnimation(): void {\n    this.animation.addAnimationProperty(this.pipeSprite);\n  }\n\n  runPipeAnimation(): void {\n    this.animation.runAnimation(this.pipeSprite);\n  }\n\n  pausePipeAnimation(): void {\n    this.animation.pauseAnimation(this.pipeSprite);\n  }\n\n  getPipePosition(): DOMRect {\n    return this.pipeSprite.getBoundingClientRect();\n  }\n}\n","import { TimerProtocol } from './interfaces/timer-protocol';\n\nexport class TimerInterval implements TimerProtocol {\n  private _timer: NodeJS.Timer | null = null;\n\n  // setTimer(func: () => void, milliseconds: number): void {\n  //   this._timer = setInterval(func, milliseconds);\n  // }\n  setTimer(obj: any, objMethod: string, milliseconds: number): void {\n    this._timer = setInterval(() => {\n      obj[objMethod]();\n    }, milliseconds);\n  }\n  clearTimer(): void {\n    if (this._timer) clearInterval(this._timer);\n  }\n}\n\nexport class TimerTimeout implements TimerProtocol {\n  private _timer: NodeJS.Timer | null = null;\n\n  setTimer(obj: any, objMethod: string, milliseconds: number): void {\n    this._timer = setTimeout(() => {\n      obj[objMethod]();\n    }, milliseconds);\n  }\n  clearTimer(): void {\n    if (this._timer) clearTimeout(this._timer);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Clouds } from './clouds';\nimport { Game } from './game';\nimport { Menu } from './menu';\nimport { Mario } from './mario';\nimport { Pipe } from './pipe';\nimport { Animation } from './animation';\nimport { TimerInterval, TimerTimeout } from './timer';\nimport { MarioJumpListener } from './listeners';\n\n// Animation Class Controller\nconst animation = new Animation();\n\n// timers\n\nconst startGameTimer = new TimerTimeout(); // to reset all sprites before game start\nconst marioJumpTimer = new TimerTimeout();\nconst gameTimer = new TimerInterval();\n\n// Sprites\nconst mario = new Mario(\n  document.querySelector('.mario') as HTMLImageElement,\n  animation,\n  marioJumpTimer,\n);\n\nconst pipe = new Pipe(\n  document.querySelector('.pipe') as HTMLImageElement,\n  animation,\n);\n\n// const clouds = new Clouds(\n//   document.querySelector('.clouds') as HTMLImageElement,\n// );\n\n// Listeners\n\n// const marioListener = new MarioJumpListener(mario);\n\n// Game\nconst game = new Game(\n  mario,\n  pipe,\n  document.querySelector('.score') as HTMLParagraphElement,\n  gameTimer,\n);\n\n// HUD\nconst menu = new Menu(\n  document.querySelector('.start') as HTMLButtonElement,\n  document.querySelector('.game-menu__p') as HTMLParagraphElement,\n  document.querySelector('.game-menu__p-top-score') as HTMLParagraphElement,\n  game,\n  mario,\n  pipe,\n  startGameTimer,\n);\nmenu.setTopScore();\n\ngame.menu = menu;\n"],"names":[],"sourceRoot":""}